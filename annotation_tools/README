This directory contains a set of scripts we wrote to assist in data annotation.

Prerequisites:
  Python (written for 3, but should work with 2)

Each program is described briefly below. Most will provide more detail when run
without any arguments (a couple exceptions are noted below).

Variables used in the descriptions below:
  STANDOFF_NAME, filename for standoff annotation
  DATA, base directory for annotation set, NOTE: expects layout to be: $DATA/<user>/<subpart>/<file>
  RAW_DATA, location of the raw data
  PREFIX, the prefix for files generated by the standoff to inline process

Create a directory of assignments for annotators
  python3 assign.py <comma_separated_usernames> <file_of_files_to_use> [<items>:<group_size>]+

Compare annotations
  python3 compare.py <filenames>

Create a standoff file based on current annotations
  python3 inline_to_standoff.py $(RAW_DATA) $(DATA)/*/*/* > $(DATA)/$(STANDOFF_NAME)

Print an inline version of all annotations to stdout (supply PREFIX="blah" to save into files instead)
  python3 standoff_to_inline.py $(RAW_DATA) $(PREFIX) < $(DATA)/$(STANDOFF_NAME)

Produce a single file with non-redundant output for use in a classifier. Note -
to get usage instructions, run and then provide no input (ctrl-D).
  python3 standoff_to_merged.py < $(DATA)/$(STANDOFF_NAME)

Print all the words that were annotated
  python3 standoff_to_words.py

Calculate agreement information
  # Post level
  python3 score.py < $(DATA)/$(STANDOFF_NAME) | sort -k1rn | grep 'post'
  # Span level
  python3 score.py < $(DATA)/$(STANDOFF_NAME) | sort -k1rn | grep 'span'
  # Calculate the agreement measure Fleiss Kappa
  python3 fleiss_kappa.py

